<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaneki.mapper.UserMapper">

	<!-- 添加用户 -->
	<insert id="addUser" parameterType="User">
		insert into
		USERS(USER_ID,DEPT_ID,USER_NAME,USER_PASSWORD,USER_BIRTHDAY,USER_SEX,USER_ADDRESS,USER_PHONE)
		values(SEQ_USERS.nextval,#{dept.deptId},#{userName},#{userPassword},#{userBirthday},#{userSex},#{userAddress},#{userPhone})
	</insert>

	<!-- 更新用户 -->
	<update id="updateUser" parameterType="User">
		update USERS
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null and userName!= ''">
				USER_NAME=#{userName},
			</if>
			<if test="userSex != null and userSex!= ''">
				USER_SEX=#{userSex},
			</if>
			<if test="userPassword != null and userPassword != ''">
				USER_PASSWORD=#{userPassword},
			</if>
			<if test="userBirthday != null">
				USER_BIRTHDAY=#{userBirthday},
			</if>
			<if test="userPhone != null and userPhone!=''">
				USER_PHONE=#{userPhone},
			</if>
			<if test="userImage != null and userImage !=''">
				USER_IMAGE=#{userImage},
			</if>
			<if test="userAddress != null and userAddress!=''">
				USER_ADDRESS=#{userAddress},
			</if>
			<if test="dept !=null">
				<if test="dept.deptId != null">
					DEPT_ID =#{dept.deptId},
				</if>
			</if>
		</trim>
		where USER_ID=#{userId}
	</update>

	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="Integer">
		delete from USERS where
		USER_ID=#{userId}
	</delete>
	
	<delete id="delStansard" >
		delete from USERS where
		USER_ID in
		<foreach collection="array" item="ids" open="(" separator="," close=")">
			#{ids}
		</foreach>
	</delete>
	
	<sql id="whereUser">
	<if test="userName !=null and userName !=''">
			<bind name="UserName" value="'%'+userName+'%'" />
			where USER_NAME like #{UserName}
		</if>
	</sql>

	<!-- 分页查询所有用户 -->
	<select id="findAllUser" parameterType="User"
		resultMap="DeptWithUserResult">
		select xxx.* from(
		select xx.* ,rownum as rn from
		(select d.dept_name,
		u.*,Floor(months_between(sysdate,user_birthday)/12) as
		age from users u
		left join department d on u.dept_id=d.dept_id
		<include refid="whereUser"/>
		order by u.USER_ID desc)xx
		where rownum &lt;=(#{page}*#{size}))xxx
		where rn &gt;((#{page}-1)*#{size})
	</select>

	<!-- 根据userId查询 -->
	<select id="findUserById" parameterType="Integer"
		resultMap="DeptWithUserResult">
		select u.*,to_char(u.user_birthday,'yyyy-mm-dd') age from
		USERS u
		where USER_ID=#{userId}
	</select>

	<!-- 根据用户名称模糊查询 -->
	<select id="findUserByName" parameterType="User"
		resultMap="DeptWithUserResult">
		select * from USERS
		<trim prefix="where" prefixOverrides="and">
			<if test="userName !=null and userName !=''">
				<bind name="user_name" value="'%'+userName+'%'" />
				and USER_NAME like #{user_name}
			</if>
		</trim>
	</select>

	<!-- 根据用户编号查询 -->
	<select id="selectResByUserId" parameterType="int"
		resultType="Res">
		select distinct URL from RES a
		inner join ROLE_RES b on
		b.res_id=a.res_id
		inner join USER_ROLE c on c.role_id=b.role_id where
		c.user_id=${value}
	</select>

	<!-- 根据用户手机号查询 -->
	<select id="findUserByPhone" parameterType="String"
		resultType="User">
		select USER_PHONE as userPhone from USERS where
		USER_PHONE=#{value}
	</select>

	<!-- 根据用户编号和手机号码查询 -->
	<select id="findUserByPhoneID" parameterType="User"
		resultType="User">
		select USER_PHONE as userPhone from USERS where
		USER_PHONE=#{userPhone} and USER_ID=#{userId}
	</select>

	<!-- 根据用户编号和密码查询 -->
	<select id="findUserByUserIdAndPw" parameterType="User"
		resultMap="DeptWithUserResult">
		select * from USERS where USER_PASSWORD=#{userPassword} and
		USER_ID=#{userId}
	</select>

	<!-- 根据用户手机号和密码查询 -->
	<select id="findUser" parameterType="User"
		resultMap="userWithRes">
		select *
		from USERS where USER_PHONE=#{userPhone} and
		USER_PASSWORD=#{userPassword}
	</select>

	<!-- 查询用户总数 -->
	<select id="findCountUser" resultType="int" parameterType="User">
		select count(*) total from
		USERS
		<include refid="whereUser"/>
	</select>

	<!-- 查询所有用户 -->
	<select id="getUser" resultType="User">
		select distinct USER_ID as
		userId,USER_NAME as userName from USERS order by USER_ID
	</select>

	<!-- 返回DeptWithUserResult -->
	<resultMap type="User" id="DeptWithUserResult">
		<id property="userId" column="USER_ID" javaType="Integer" />
		<result property="userName" column="USER_NAME"
			javaType="String" />
		<result property="userPassword" column="USER_PASSWORD"
			javaType="String" />
		<result property="userSex" column="USER_SEX" javaType="String" />
		<result property="userBirthday" column="USER_BIRTHDAY"
			javaType="java.util.Date" />
		<result property="userAddress" column="USER_ADDRESS"
			javaType="String" />
		<result property="userPhone" column="USER_PHONE"
			javaType="String" />
		<result property="age" column="age" javaType="String" />
		<association property="dept" javaType="Dept">
			<id property="deptId" column="DEPT_ID" javaType="Integer" />
			<result property="deptName" column="DEPT_NAME"
				javaType="String" />
		</association>
	</resultMap>

	<!-- 返回userWithRes -->
	<resultMap type="User" id="userWithRes">
		<id property="userId" column="USER_ID" javaType="Integer" />
		<result property="userName" column="USER_NAME"
			javaType="String" />
		<result property="userPassword" column="USER_PASSWORD"
			javaType="String" />
		<result property="userSex" column="USER_SEX" javaType="String" />
		<result property="userBirthday" column="USER_BIRTHDAY"
			javaType="java.util.Date" />
		<result property="userAddress" column="USER_ADDRESS"
			javaType="String" />
		<result property="userPhone" column="USER_PHONE"
			javaType="String" />
		<association property="dept" javaType="Dept">
			<id property="deptId" column="DEPT_ID" javaType="Integer" />
			<result property="deptName" column="DEPT_NAME"
				javaType="String" />
		</association>
		<collection property="ress" column="USER_ID"
			select="selectResByUserId">
		</collection>
	</resultMap>
</mapper>